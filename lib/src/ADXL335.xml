<!--
  Copyright 2011-2014 Marvell Semiconductor, Inc.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<module xmlns="http://www.kinoma.com/kpr/1">

    <require id="HardwarepinsModule" path="HardwarepinsModule" />

    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <!-- ADXL335 module for polling data from a ADXL335 accelerometer sensor -->
    <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <class id="ADXL335" like="HardwarepinsModule.Analog">
        <constructor params="xpin, ypin, zpin, config">
            <![CDATA[            
                HardwarepinsModule.Analog.call( this, [xpin, ypin, zpin], config );
            ]]>
        </constructor>
        <method id="configureParameters" params="parameters">
            <![CDATA[
                HardwarepinsModule.Analog.prototype.configureParameters.call( this, parameters );
                        
                parameters.xpin = this.pins[0];
                parameters.ypin = this.pins[1];
                parameters.zpin = this.pins[2];
            ]]>
        </method>
        <method id="createHardwarepinsSimulator">
            <![CDATA[
                return new ADXL335SimulatorInterface();
            ]]>
        </method>
        <method id="init" params="callback">
            <![CDATA[
                this.run( "ADXL335Scripts", "adxl335_bll_init", null, callback );
            ]]>
        </method>
        <method id="get" params="callback">
            <![CDATA[
                this.run( "ADXL335Scripts", "adxl335_bll_get", null, callback );
            ]]>
        </method>
        <method id="poll" params="time, units, callback, skipFirst">
            <![CDATA[
                this.repeat( "ADXL335Scripts", "adxl335_bll_poll", null, time, units, skipFirst, callback );
            ]]>
        </method>
    </class>
    
    <!-- +++++++++++++++++++++++++++ -->
    <!-- ADXL335 simulator interface -->
    <!-- +++++++++++++++++++++++++++ -->

    <variable id="ADXL335_SIMULATOR_ID" value="'ADXL335'" />
    
    <class id="ADXL335SimulatorInterface" like="HardwarepinsModule.SimulatorInterface">
        <method id="getSimulatorId">
            <![CDATA[
                return ADXL335_SIMULATOR_ID;
            ]]>
        </method>
        <method id="getSimulatorModule">
            <![CDATA[
                return mergeURI( module.uri, "ADXL335Simulator" );
            ]]>
        </method>
        <method id="adxl335_bll_init" params="query, parameters, invoker">
            <![CDATA[
                this.sendHardwarepinsEvent( "init", query, parameters, invoker );
            ]]>
        </method>
        <method id="adxl335_bll_get" params="query, parameters, invoker">
            <![CDATA[
                this.sendHardwarepinsEvent( "get", query, parameters, invoker );
            ]]>
        </method>
        <method id="adxl335_bll_poll" params="query, parameters, invoker">
            <![CDATA[
                this.sendHardwarepinsEvent( "poll", query, parameters, invoker );
            ]]>
        </method>
    </class>

</module>
